// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using loginauth.Context;

#nullable disable

namespace KaniniTourism.Migrations
{
    [DbContext(typeof(TourismContext))]
    [Migration("20230731162004_createDB")]
    partial class createDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KaniniTourism.Models.Booking", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("Date");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("Date");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username1");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("KaniniTourism.Models.Hotels", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("hotels");
                });

            modelBuilder.Entity("KaniniTourism.Models.ImageGallery", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.HasKey("Id");

                    b.ToTable("imageGallery");
                });

            modelBuilder.Entity("KaniniTourism.Models.Package", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelsId")
                        .HasColumnType("int");

                    b.Property<string>("Itinerary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SpotId")
                        .HasColumnType("int");

                    b.Property<string>("Transport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HotelsId");

                    b.HasIndex("PlaceId");

                    b.HasIndex("SpotId");

                    b.HasIndex("Username1");

                    b.ToTable("packages");
                });

            modelBuilder.Entity("KaniniTourism.Models.Place", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpotId");

                    b.ToTable("places");
                });

            modelBuilder.Entity("KaniniTourism.Models.Spot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int?>("SpotDuration")
                        .HasColumnType("int");

                    b.Property<string>("SpotName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("spots");
                });

            modelBuilder.Entity("KaniniTourism.Models.Transaction", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("KaniniTourism.Models.TravelAgent", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("travelAgents");
                });

            modelBuilder.Entity("loginauth.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("users");
                });

            modelBuilder.Entity("KaniniTourism.Models.Booking", b =>
                {
                    b.HasOne("loginauth.Models.User", null)
                        .WithMany("Bookings")
                        .HasForeignKey("Username1");
                });

            modelBuilder.Entity("KaniniTourism.Models.Package", b =>
                {
                    b.HasOne("KaniniTourism.Models.Hotels", null)
                        .WithMany("packages")
                        .HasForeignKey("HotelsId");

                    b.HasOne("KaniniTourism.Models.Place", null)
                        .WithMany("Packages")
                        .HasForeignKey("PlaceId");

                    b.HasOne("KaniniTourism.Models.Spot", null)
                        .WithMany("Packages")
                        .HasForeignKey("SpotId");

                    b.HasOne("loginauth.Models.User", null)
                        .WithMany("packages")
                        .HasForeignKey("Username1");
                });

            modelBuilder.Entity("KaniniTourism.Models.Place", b =>
                {
                    b.HasOne("KaniniTourism.Models.Spot", null)
                        .WithMany("Places")
                        .HasForeignKey("SpotId");
                });

            modelBuilder.Entity("KaniniTourism.Models.Transaction", b =>
                {
                    b.HasOne("KaniniTourism.Models.Booking", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BookingId");
                });

            modelBuilder.Entity("KaniniTourism.Models.Booking", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("KaniniTourism.Models.Hotels", b =>
                {
                    b.Navigation("packages");
                });

            modelBuilder.Entity("KaniniTourism.Models.Place", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("KaniniTourism.Models.Spot", b =>
                {
                    b.Navigation("Packages");

                    b.Navigation("Places");
                });

            modelBuilder.Entity("loginauth.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("packages");
                });
#pragma warning restore 612, 618
        }
    }
}
